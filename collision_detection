`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: California State Univerity, Long Beach 
// Engineer: Bronson Garel
// 
// Create Date: 12/09/2024 04:22:41 PM
// Design Name: 
// Module Name: collision_detection
// Project Name: Snake Game
// Target Devices: Nexys A7-100T
// Tool Versions: Vivado 2024.1
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module collision_detection(
    input reset,
    input [9:0] head_x,
    input [9:0] head_y,
    input [499:0] body_x,
    input [499:0] body_y,
    input [6:0] snake_length,
    output reg collision
    );
    
    wire [9:0] body_x_a [49:0];
    wire [9:0] body_y_a [49:0];
    parameter MAX_SIZE = 50;
    
    // unpack snake
    genvar j;
    generate
        for (j = 0; j < MAX_SIZE; j = j + 1) begin
            assign body_x_a[j] = body_x[10*j +: 10];
            assign body_y_a[j] = body_y[10*j +: 10];
        end
    endgenerate
    
    parameter SCREEN_WIDTH = 640;
    parameter SCREEN_HEIGHT = 480;
    
    integer i;
    
    always @(*) begin
        if (reset) collision = 0;
        
        collision = 0;
            
         // Check boundary collision
        if (head_x < 0 || head_x >= SCREEN_WIDTH || head_y < 0 || head_y >= SCREEN_HEIGHT)
            collision = 1;
            
            // Check self-collision
        for (i = 1; i < snake_length; i = i + 1) begin
            if (head_x == body_x_a[i] && head_y == body_y_a[i]) begin
                collision = 1;
            end
        end
    end
endmodule
