`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 11/29/2024 04:20:55 PM
// Design Name: 
// Module Name: top
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module top(
    input  clk,          // 100MHz
    input  reset,
    input  up,
    input  down,
    input  left,
    input  right,
    output hsync,
    output vsync,
    output [11:0] rgb
    );
    
    //wire w_reset, w_up, w_down, w_left, w_right;
    wire w_video_on, w_p_tick, w_game_over;
    wire w_snake_x_flat, w_snake_y_flat, w_snakeLength;
    wire [9:0] w_x, w_y, w_foodX, w_foodY;
    
    reg  [11:0] rgb_reg;
    wire [11:0] rgb_next;
    
    // ----------------------------------------------------------------------------------------- //
    //                                         Modules                                           //
    // ----------------------------------------------------------------------------------------- //
        VGA_controller vga_c(.clk_100MHz(clk), .reset(reset), .hsync(hsync), .vsync(vsync),
                             .video_on(w_video_on), .p_tick(w_p_tick), .x(w_x), .y(w_y));
        
//      button_debouncer dReset (.clk(clk), .btn_in(reset), .btn_out(w_reset));
//      button_debouncer dUp    (.clk(clk), .btn_in(up),    .btn_out(w_up));
//      button_debouncer dDown  (.clk(clk), .btn_in(down),  .btn_out(w_down));
//      button_debouncer dLeft  (.clk(clk), .btn_in(left),  .btn_out(w_left));
//      button_debouncer dRight (.clk(clk), .btn_in(right), .btn_out(w_right));
                             
        pixel_gen pg (.clk(clk), .reset(reset), .up(up), .down(down), .left(left), 
                  .right(right), .video_on(w_video_on), .p_tick(w_p_tick), .x(w_x), 
                  .y(w_y), .foodX(w_foodX), .foodY(w_foodY), .snake_x_flat(w_snake_x_flat), 
                  .snake_y_flat(w_snake_y_flat), .rgb(rgb_next));
                  
        gameLogic gl (.clk(clk), .reset(reset), .up(up), .down(down), .left(left),
                      .right(right), .game_over(w_game_over), .snake_x_flat(w_snake_x_flat),
                      .snake_y_flat(w_snake_y_flat), .snakeLength(w_snakeLength), 
                      .foodX(w_foodX), .foodY(w_foodY));
    // ----------------------------------------------------------------------------------------- //

    
    
    // ----------------------------------------------------------------------------------------- //
    //                                        RGB buffer                                         //
    // ----------------------------------------------------------------------------------------- //
        always @(posedge clk)
            if(w_p_tick)
                rgb_reg <= rgb_next;
        
        assign rgb = rgb_reg;
    // ----------------------------------------------------------------------------------------- //
    
endmodule
