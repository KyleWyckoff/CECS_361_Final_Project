`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: California State University, Long Beach
// Engineer: Bronson Garel, Kyle Wyckoff
// 
// Create Date: 12/06/2024 07:03:05 PM
// Design Name: 
// Module Name: food_logic
// Project Name: Snake Game
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module food_logic(
    input clk,
    input reset,
    input game_over,
    input [9:0] head_x,
    input [9:0] head_y,
    output reg food_eaten,
    output reg [9:0] food_x,
    output reg [9:0] food_y
    );
    parameter WIDTH = 8, minX = 40, maxX = 640, minY = 40, maxY = 440;
    reg [WIDTH-1:0] lfsr;

    parameter SCREEN_WIDTH = 640;
    parameter SCREEN_HEIGHT = 480;
    parameter SNAKE_STEP = 10;
    reg [15:0] random_seed;
    reg food_needs_update;
    wire feedback;
    
    assign feedback = random_seed[15] ^ random_seed[13] ^ random_seed[12] ^ random_seed[10];
    
    always @(posedge clk or posedge reset) begin
            if (reset) begin
                lfsr <= {WIDTH{1'b1}}; // Initialize LFSR to non-zero value
                random_seed <= 16'hACE1;
                food_x <= SCREEN_WIDTH/4;
                food_y <= SCREEN_HEIGHT/4;
                food_needs_update <= 1'b0;
                food_eaten <= 1'b0;
            end else begin
            if (~game_over) begin
                food_eaten <= (head_x == food_x && head_y == food_y);
                
                if (food_eaten && !food_needs_update) begin
                    lfsr <= {lfsr[WIDTH-2:0], lfsr[WIDTH-1] ^ lfsr[2]};
                    food_x <= (minX + (lfsr % ((maxX - minX) / 10 + 1)) * 10);
                    food_y <= (minY + (lfsr % ((maxY - minY) / 10 + 1)) * 10);
                    food_needs_update <= 1'b1;
                end

                if (!food_eaten)
                    food_needs_update <= 1'b0;
            end
            end
        end
endmodule
